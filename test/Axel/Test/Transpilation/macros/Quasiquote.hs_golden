import qualified Prelude as GHCPrelude
import qualified Axel.Parse.AST as AST
import Axel.Prelude
import qualified Axel.Parse.AST as AST
import qualified Axel.Sourcemap as SM
assertEq expr expected = if ((==) ((<$) () expr) ((<$) () expected)) then (AST.SExpression (GHCPrelude.Just ((,) "axelTemp/3162243063344877606/result.axel" (SM.Position 1 73))) [(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/3162243063344877606/result.axel" (SM.Position 1 73))) "raw"),(AST.LiteralString (GHCPrelude.Just ((,) "axelTemp/3162243063344877606/result.axel" (SM.Position 1 73))) "-- Passed!")]) else (error ((<>) (AST.toAxel expr) ((<>) " given, but " ((<>) (AST.toAxel expected) " expected!"))))
assertEq :: ((->) (AST.Expression a) ((->) (AST.Expression b) SM.Expression))
sym x = (AST.Symbol Nothing x)
sym :: ((->) String SM.Expression)
sexp xs = (AST.SExpression Nothing xs)
sexp :: ((->) ([] SM.Expression) SM.Expression)
-- Passed!
-- Passed!
-- Passed!
-- Passed!
testQuasiquote_AXEL_AUTOGENERATED_MACRO_DEFINITION _ = (pure [(assertEq (AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 46))) "topLevelBasic") (sym "topLevelBasic")),(assertEq (AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 25 30))) (concat [[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 176))) "quote")],[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 185))) "topLevelQuote")]])) (sexp [(sym "quote"),(sym "topLevelQuote")])),(assertEq (AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 27 16))) (concat [[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 342))) "\\")],[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 347))) "inFormBasic")],[(sym "inFormUnquote")],(AST.toExpressionList [(sym "inFormSpliceUnquote1"),(sym "inFormSpliceUnquote2")]),[(AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 27 128))) (concat [[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 552))) "quote")],[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 561))) "inFormQuote")]]))]])) (sexp [(sym "\\"),(sym "inFormBasic"),(sym "inFormUnquote"),(sym "inFormSpliceUnquote1"),(sym "inFormSpliceUnquote2"),(sexp [(sym "quote"),(sym "inFormQuote")])])),(assertEq (AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 29 16))) (concat [[(AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 29 17))) (concat [[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 920))) "inForm2Basic")],[(sym "inForm2Unquote")],(AST.toExpressionList [(sym "inForm2SpliceUnquote1"),(sym "inForm2SpliceUnquote2")]),[(AST.SExpression (GHCPrelude.Just ((,) "Quasiquote" (SM.Position 29 132))) (concat [[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 1129))) "quote")],[(AST.Symbol (GHCPrelude.Just ((,) "axelTemp/5767202577043347823/result.axel" (SM.Position 1 1138))) "inForm2Quote")]]))]]))]])) (sexp [(sexp [(sym "inForm2Basic"),(sym "inForm2Unquote"),(sym "inForm2SpliceUnquote1"),(sym "inForm2SpliceUnquote2"),(sexp [(sym "quote"),(sym "inForm2Quote")])])]))])
testQuasiquote_AXEL_AUTOGENERATED_MACRO_DEFINITION :: [AST.Expression SM.SourceMetadata] -> GHCPrelude.IO [AST.Expression SM.SourceMetadata]
