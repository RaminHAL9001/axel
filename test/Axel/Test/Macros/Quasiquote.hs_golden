import Axel.Parse.AST as AST
import qualified Axel.Parse.AST as AST
import qualified Axel.Sourcemap as SM
assertEq expr expected = if ((==) ((<$) () expr) ((<$) () expected)) then (AST.SExpression (Just (SM.SourcePosition 1 73)) [(AST.Symbol (Just (SM.SourcePosition 1 73)) "raw"),(AST.LiteralString (Just (SM.SourcePosition 1 73)) "{- Passed! -}")]) else (error ((<>) (AST.toAxel expr) ((<>) " given, but " ((<>) (AST.toAxel expected) " expected!"))))
assertEq :: ((->) (AST.Expression a) ((->) (AST.Expression b) SM.Expression))
sym x = (AST.Symbol Nothing x)
sym :: ((->) String SM.Expression)
sexp xs = (AST.SExpression Nothing xs)
sexp :: ((->) ([] SM.Expression) SM.Expression)
{- Passed! -}
{- Passed! -}
{- Passed! -}
{- Passed! -}
testQuasiquote_AXEL_AUTOGENERATED_MACRO_DEFINITION _ = (pure [(assertEq (AST.Symbol (Just (SM.SourcePosition 1 46)) "topLevelBasic") (sym "topLevelBasic")),(assertEq (AST.SExpression (Just (SM.SourcePosition 23 30)) (concat [[(AST.Symbol (Just (SM.SourcePosition 1 154)) "quote")],[(AST.Symbol (Just (SM.SourcePosition 1 163)) "topLevelQuote")]])) (sexp [(sym "quote"),(sym "topLevelQuote")])),(assertEq (AST.SExpression (Just (SM.SourcePosition 25 16)) (concat [[(AST.Symbol (Just (SM.SourcePosition 1 298)) "\\")],[(AST.Symbol (Just (SM.SourcePosition 1 303)) "inFormBasic")],[(sym "inFormUnquote")],(AST.toExpressionList [(sym "inFormSpliceUnquote1"),(sym "inFormSpliceUnquote2")]),[(AST.SExpression (Just (SM.SourcePosition 25 128)) (concat [[(AST.Symbol (Just (SM.SourcePosition 1 486)) "quote")],[(AST.Symbol (Just (SM.SourcePosition 1 495)) "inFormQuote")]]))]])) (sexp [(sym "\\"),(sym "inFormBasic"),(sym "inFormUnquote"),(sym "inFormSpliceUnquote1"),(sym "inFormSpliceUnquote2"),(sexp [(sym "quote"),(sym "inFormQuote")])])),(assertEq (AST.SExpression (Just (SM.SourcePosition 27 16)) (concat [[(AST.SExpression (Just (SM.SourcePosition 27 17)) (concat [[(AST.Symbol (Just (SM.SourcePosition 1 810)) "inForm2Basic")],[(sym "inForm2Unquote")],(AST.toExpressionList [(sym "inForm2SpliceUnquote1"),(sym "inForm2SpliceUnquote2")]),[(AST.SExpression (Just (SM.SourcePosition 27 132)) (concat [[(AST.Symbol (Just (SM.SourcePosition 1 997)) "quote")],[(AST.Symbol (Just (SM.SourcePosition 1 1006)) "inForm2Quote")]]))]]))]])) (sexp [(sexp [(sym "inForm2Basic"),(sym "inForm2Unquote"),(sym "inForm2SpliceUnquote1"),(sym "inForm2SpliceUnquote2"),(sexp [(sym "quote"),(sym "inForm2Quote")])])]))])
testQuasiquote_AXEL_AUTOGENERATED_MACRO_DEFINITION :: [AST.Expression SM.SourceMetadata] -> IO [AST.Expression SM.SourceMetadata]